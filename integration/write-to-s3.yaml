apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: write-to-s3-task
spec:
  params:
    - name: AWS_REGION
      value: us-east-2
      description: "AWS region where the S3 bucket is located"
    - name: AWS_S3_BUCKET
      value: konflux-logs
      description: "Name of the S3 bucket to write to"
    - name: DESTINATION_PATH
      value: /logs/artifacts
      description: "Path to upload the file to in the S3 bucket"
    - name: AWS_ROLE_ARN
      description: "ARN of the IAM role to assume"
    - name: AWS_ACCESS_KEY_ID
      description: "AWS access key ID"
    - name: AWS_SECRET_ACCESS_KEY
      description: "AWS secret access key"
  steps:
    - name: login-to-aws
      image: amazon/aws-cli
      script: |
        #!/bin/sh
        aws configure set aws_access_key_id $(echo $(inputs.params.AWS_ACCESS_KEY_ID))
        aws configure set aws_secret_access_key $(echo $(inputs.params.AWS_SECRET_ACCESS_KEY))
        aws configure set region $(inputs.params.AWS_REGION)

    - name: assume-role
      image: amazon/aws-cli
      script: |
        #!/bin/sh
        CREDS=$(aws sts assume-role --role-arn $(inputs.params.AWS_ROLE_ARN) --role-session-name tekton-s3-write-task --output json)
        export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

    - name: s3-write
      image: amazon/aws-cli
      script: |
        #!/bin/sh
        
        # Create sample XML for testing
        echo '<?xml version="1.0" encoding="UTF-8"?>
        <testsuites>
          <testsuite name="SampleTestSuite" tests="1" failures="0" errors="0" time="0.123">
            <testcase name="SampleTestCase" classname="SampleTestClass" time="0.123"/>
          </testsuite>
        </testsuites>' > test_report.xml

        #TODO: figure out how to get a unique build id to use in log filepath name.

        aws s3 cp test_report.xml s3://$(inputs.params.AWS_S3_BUCKET)/$(inputs.params.DESTINATION_PATH) --region $(inputs.params.AWS_REGION)