apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: write-to-s3-task
spec:
  params:
    - name: AWS_REGION
      default: 'us-east-2'
      type: string
    - name: AWS_S3_BUCKET
      default: 'konflux-logs'
      type: string
    - name: DESTINATION_PATH
      default: 'logs/artifacts'
      type: string
  volumes:
    - name: secret-volume
      secret:
        secretName: aws-creds
  steps:
    - name: write-to-bucket
      image: amazon/aws-cli
      script: |
        #!/bin/sh
       
        AWS_ACCESS_KEY_ID=$(cat /workspace/AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY=$(cat /workspace/AWS_SECRET_ACCESS_KEY)
        
        export AWS_ACCESS_KEY_ID
        export AWS_SECRET_ACCESS_KEY
        
        # Configure AWS creds       
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region $(inputs.params.AWS_REGION)

        # Assume role and interact with new temp creds
        AWS_ROLE_ARN=$(cat /workspace/AWS_ROLE_ARN)
        export AWS_ROLE_ARN
        CREDS=$(aws sts assume-role --role-arn $AWS_ROLE_ARN --role-session-name tekton-s3-write-task --output json)
        
        # Extract and export the new temp session creds
        yum install -y jq

        export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo "$CREDS" | jq -r '.Credentials.SessionToken')

        export AWS_ACCESS_KEY_ID
        export AWS_SECRET_ACCESS_KEY
        export AWS_SESSION_TOKEN

        # Create sample XML for testing file write
        echo '<?xml version="1.0" encoding="UTF-8"?>
        <testsuites>
          <testsuite name="SampleTestSuite" tests="1" failures="0" errors="0" time="0.123">
            <testcase name="SampleTestCase" classname="SampleTestClass" time="0.123"/>
          </testsuite>
        </testsuites>' > test_report.xml

        # Write XML data to bucket creating a unique dir using taskRun.name
        aws s3 cp test_report.xml s3://$(inputs.params.AWS_S3_BUCKET)/$(inputs.params.DESTINATION_PATH)/$(context.taskRun.name)/ --region $(inputs.params.AWS_REGION)

      volumeMounts:
        - name: secret-volume
          mountPath: /workspace